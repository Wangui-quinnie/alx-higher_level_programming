The "2-matrix_divided" module
=======================================================
This uses the "2-matrix_divided" function
------------------------------------------------------

Importing the function from the module:
	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

division by a positive integer
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2)
	[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

division by a floating point number
	>>> matrix_divided([[1.5, 2.5], [3.5, 4.5]], 1.5)
	[[1.0, 1.67], [2.33, 3.0]]

division by 0
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
	Traceback (most recent call last):
	    ...
	ZeroDivisionError: division by zero

division of an invalid matrix
	>>> matrix_divided([[1, 2, 3], [4, '5', 6]], 3)
	Traceback (most recent call last):
	    ...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

division when the row size differs
	>>> matrix_divided([[1, 2, 3], [4, 5]], 2)
	Traceback (most recent call last):
	    ...
	TypeError: Each row of the matrix must have the same size

division by a non integer/float
	>>> matrix_divided([[2.0, 3.0], [4.0, 5.0]], '3')
	Traceback (most recent call last):
	    ...
	TypeError: div must be a number

division of integers by a floating point number
	>>> matrix_divided([[3, 6], [9, 12]], 3.0)
	[[1.0, 2.0], [3.0, 4.0]]

division of an empty list
	>>> matrix_divided([], 3)
	[]

division when the matrix values are 0
	>>> matrix_divided([[0]], 2)
	[[0.0]]

division of floating point numbers by an integer
	>>> matrix_divided([[1.5, 4.5], [6.0, 7.5]], 3)
	[[0.5, 1.5], [2.0, 2.5]]
